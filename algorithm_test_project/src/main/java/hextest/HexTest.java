package hextest;

import java.nio.charset.Charset;

public class HexTest {
    public static void main(String[] args) {
        //String s = "68747470733a2f2f7863726d2e3538636f72702e636f6d2f61706161732f7765622f736161736170706465762f647574796164643f613d3126623d25453825414625423425453725394125383425453625393825414625453525413425394125453525423025393125453625393425423625453525383825423025453625393825414626633d736473647364736473737373737373737326613d254537253941253834254539253830253946254535254241254136254539253830253946254535254241254136254539253830253946254535254241254136254536253938254146254537253941253834254536253938254146254537253941253834254536253938254146254537253941";
        String s = "68747470733a2f2f7863726d2e3538636f72702e636f6d2f61706161732f7765622f736161736170706465762f647574796164643f613d3126623d25453825414625423425453725394125383425453625393825414625453525413425394125453525423025393125453625393425423625453525383825423025453625393825414626633d736473647364736473737373737373737326613dd68747470733a2f2f7863726d2e3538636f72702e636f6d2f61706161732f7765622f736161736170706465762f647574796164643f613d3126623d25453825414625423425453725394125383425453625393825414625453525413425394125453525423025393125453625393425423625453525383825423025453625393825414626633d736473647364736473737373737373737326613d
        String resRight = "https://xcrm.58corp.com/apaas/web/saasappdev/dutyadd?a=1&b=%E8%AF%B4%E7%9A%84%E6%98%AF%E5%A4%9A%E5%B0%91%E6%94%B6%E5%88%B0%E6%98%AF&c=sdsdsdsdsssssssss&a=%E7%9A%84%E9%80%9F%E5%BA%A6%E9%80%9F%E5%BA%A6%E9%80%9F%E5%BA%A6%E6%98%AF%E7%9A%84%E6%98%AF%E7%9A%84%E6%98%AF%E7%9A%84%E6%98%AF%E7%9A%84%E6%98%AF%E7%9A%84%E6%94%B6%E5%88%B0%E6%98%AF%E5%A4%9A%E5%B0%91%E5%A4%9A%E6%89%80%E6%98%AF%E7%9A%84%E6%98%AF%E7%9A%84%E6%98%AF%E7%9A%84%E6%98%AF%E7%9A%84%E6%98%AF%E7%9A%84%E6%98%AF%E5%A4%9A%E5%B0%91&d=https://xcrm.58corp.com/apaas/web/saasappdev/dutyadd?a=1&b=%E8%AF%B4%E7%9A%84%E6%98%AF%E5%A4%9A%E5%B0%91%E6%94%B6%E5%88%B0%E6%98%AF&c=sdsdsdsdsssssssss&a=%E7%9A%84%E9%80%9F%E5%BA%A6%E9%80%9F%E5%BA%A6%E9%80%9F%E5%BA%A6%E6%98%AF%E7%9A%84%E6%98%AF%E7%9A%84%E6%98%AF%E7%9A%84%E6%98%AF%E7%9A%84%E6%98%AF%E7%9A%84%E6%94%B6%E5%88%B0%E6%98%AF%E5%A4%9A%E5%B0%91%E5%A4%9A%E6%89%80%E6%98%AF%E7%9A%84%E6%98%AF%E7%9A%84%E6%98%AF%E7%9A%84%E6%98%AF%E7%9A%84%E6%98%AF%E7%9A%84%E6%98%AF%E5%A4%9A%E5%B0%91";
        String res = hexStringToString(s);
        System.out.println(res);
        System.out.println(resRight.equals(res));
    }


    /**
     * 16进制转换成为string类型字符串
     * @param s
     * @return
     */
    public static String hexStringToString(String s) {
        if (s == null || s.equals("")) {
            return null;
        }
        s = s.replace(" ", "");
        byte[] baKeyword = new byte[s.length() / 2];
        for (int i = 0; i < baKeyword.length; i++) {
            try {
                baKeyword[i] = (byte) (0xff & Integer.parseInt(s.substring(i * 2, i * 2 + 2), 16));
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        try {
            s = new String(baKeyword, Charset.forName("UTF-8"));
            new String();
        } catch (Exception e1) {
            e1.printStackTrace();
        }
        return s;
    }

}
